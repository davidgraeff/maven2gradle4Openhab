<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 on 2017-12-13 -->

<plugin>
  <name>Static Code Analysis Tool Maven Plugin</name>
  <description>Executes PMD, Checkstyle and FindBugs</description>
  <groupId>org.openhab.tools</groupId>
  <artifactId>static-code-analysis</artifactId>
  <version>0.4.0</version>
  <goalPrefix>static-code-analysis</goalPrefix>
  <mojos>
    <mojo>
      <goal>checkstyle</goal>
      <description>Executes the maven-checkstyle- plugin with a predefined ruleset file and configuration properties</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.openhab.tools.analysis.tools.CheckstyleChecker</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>checkstyleFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Relative path of the suppressions XML file to use. If not set the default filter file will be used - DEFAULT_FILTER_XML</description>
        </parameter>
        <parameter>
          <name>checkstyleMavenVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of the maven-checkstyle-plugin that will be used</description>
        </parameter>
        <parameter>
          <name>checkstylePlugins</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list with artifacts that contain additional checks for Checkstyle</description>
        </parameter>
        <parameter>
          <name>checkstyleProperties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Relative path of the properties file to use in the ruleset to configure specific checks</description>
        </parameter>
        <parameter>
          <name>checkstyleRuleset</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Relative path of the XML configuration to use. If not set the default ruleset file will be used - DEFAULT_RULE_SET_XML</description>
        </parameter>
      </parameters>
      <configuration>
        <checkstyleFilter implementation="java.lang.String">${checkstyle.filter}</checkstyleFilter>
        <checkstyleMavenVersion implementation="java.lang.String" default-value="2.17">${maven.checkstyle.version}</checkstyleMavenVersion>
        <checkstyleProperties implementation="java.lang.String">${checkstyle.ruleset.properties}</checkstyleProperties>
        <checkstyleRuleset implementation="java.lang.String">${checkstyle.ruleset}</checkstyleRuleset>
      </configuration>
    </mojo>
    <mojo>
      <goal>findbugs</goal>
      <description>Executes the spotbugs-maven-plugin which is a fork of the findbugs-maven-plugin with a predefined ruleset file and configuration properties

The checker uses SpotBugs which is the successor of FindBugs. SpotBugs is fully backward compatible with FindBugs.
</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.openhab.tools.analysis.tools.FindBugsChecker</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>findbugsExclude</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Relative path of the XML that specifies the bug instances that will be excluded in the report. If not set the DEFAULT_EXCLUDE_FILTER_XML will be used</description>
        </parameter>
        <parameter>
          <name>findbugsInclude</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Relative path of the XML that specifies the bug instances that will be included from the report. If not set the DEFAULT_INCLUDE_FILTER_XML will be used</description>
        </parameter>
        <parameter>
          <name>findbugsPlugins</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list with artifacts that contain additional checks for FindBugs</description>
        </parameter>
        <parameter>
          <name>findbugsRuleset</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Relative path to the XML that specifies the bug detectors which should be run. If not set the DEFAULT_VISITORS_XML will be used</description>
        </parameter>
        <parameter>
          <name>findBugsSlf4jPluginVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of the findbugs-slf4j plugin that will be used</description>
        </parameter>
        <parameter>
          <name>spotBugsMavenPluginVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of the spotbugs-maven-plugin that will be used</description>
        </parameter>
        <parameter>
          <name>spotBugsVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of the spotbugs that will be used</description>
        </parameter>
      </parameters>
      <configuration>
        <findbugsExclude implementation="java.lang.String">${findbugs.exclude}</findbugsExclude>
        <findbugsInclude implementation="java.lang.String">${findbugs.include}</findbugsInclude>
        <findbugsRuleset implementation="java.lang.String">${findbugs.ruleset}</findbugsRuleset>
        <findBugsSlf4jPluginVersion implementation="java.lang.String" default-value="1.2.4">${findbugs.slf4j.version}</findBugsSlf4jPluginVersion>
        <spotBugsMavenPluginVersion implementation="java.lang.String" default-value="3.0.6">${maven.spotbugs.version}</spotBugsMavenPluginVersion>
        <spotBugsVersion implementation="java.lang.String" default-value="3.1.0">${spotbugs.version}</spotBugsVersion>
      </configuration>
    </mojo>
    <mojo>
      <goal>pmd</goal>
      <description>Executes the maven-pmd-plugin with a predefined ruleset file and configuration properties</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.openhab.tools.analysis.tools.PmdChecker</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>mavenPmdVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of the maven-pmd-plugin that will be used</description>
        </parameter>
        <parameter>
          <name>pmdPlugins</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list with artifacts that contain additional checks for PMD</description>
        </parameter>
        <parameter>
          <name>pmdRuleset</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Relative path of the XML configuration to use. If not set the default ruleset file will be used - DEFAULT_RULESET_XML</description>
        </parameter>
      </parameters>
      <configuration>
        <mavenPmdVersion implementation="java.lang.String" default-value="3.8">${maven.pmd.version}</mavenPmdVersion>
        <pmdRuleset implementation="java.lang.String">${pmd.ruleset}</pmdRuleset>
      </configuration>
    </mojo>
    <mojo>
      <goal>report</goal>
      <description>Transforms the results from FindBugs, Checkstyle and PMD into a single HTML Report with XSLT</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.openhab.tools.analysis.report.ReportUtility</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Describes of the build should fail if high priority error is found</description>
        </parameter>
        <parameter>
          <name>reportInMaven</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>summaryReportDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory where the summary report, containing links to the individual reports will be generated</description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory where the individual report will be generated</description>
        </parameter>
      </parameters>
      <configuration>
        <failOnError implementation="boolean" default-value="true">${report.fail.on.error}</failOnError>
        <reportInMaven implementation="boolean" default-value="true">${report.in.maven}</reportInMaven>
        <summaryReportDirectory implementation="java.io.File" default-value="${session.executionRootDirectory}/target">${report.summary.targetDir}</summaryReportDirectory>
        <targetDirectory implementation="java.io.File" default-value="${project.build.directory}/code-analysis">${report.targetDir}</targetDirectory>
      </configuration>
    </mojo>
  </mojos>
</plugin>